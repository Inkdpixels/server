#!/usr/bin/env bash

#
# server
#
# Script for creating a server,
# depending on the cwd and the installed packages.
#
# Usage: server --type <type> --port <port>
#
# Author: Tyll Wei√ü <inkdpixels@gmail.com>
#

# Retrieve all arguments.

#
# Read command line arguments.
#
while [[ $# > 1 ]]
do
  key="$1"

  case $key in
    --port)
    PORT="$2"
    shift
    ;;

    --type)
    TYPE="$2"
    shift
    ;;
  esac
  shift
done

#
# Set fallbacks for command line arguments.
#
if [[ -z $PORT ]]; then
  PORT="8000"
fi

#
# Test whether a command exists.
#
command_exists() {
  if [ `type -P $1` ]; then
    return 0
  fi
  return 1
}

#
# Log helper.
#
p_fail () {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"

  exit 1;
}

#
# shortcut for ./flow server:run
#
run_flow_server() {
  if [ -f flow ]; then
    ./flow server:run --port $PORT
  else
    p_fail "No local flow application found."
  fi

  exit 0;
}

#
# shortcut for the interal php server.
#
run_php_server() {
  if command_exists "php"; then
    php -S localhost:$PORT
  else
    p_fail "Seems like PHP isn't installed on your system, please make sure that the command is in your PATH."
  fi

  exit 0;
}

#
# shortcut for the http-server node package.
#
run_node_server() {
  if command_exists "http-server"; then
    http-server -p $PORT
  else
    p_fail "Nodes `http-server` is not installed on your system, install it using `npm i -g http-server`."
  fi

  exit 0;
}

run_any_server() {
  #
  # First of, cover the internal flow command if the file is found in the cwd.
  #
  if [ -f flow ]; then
    run_flow_server

  #
  # Next up, try to run the internal PHP server (Only for PHP version =< 5.4.0)
  # ToDo: Check the current php version.
  #
  elif command_exists "php"; then
    run_php_server

  #
  # Finally, node's http-server package.
  #
  elif command_exists "http-server"; then
    run_node_server

  #
  # Nope!
  #
  else
    p_fail "No server available, please install PHP v <= 5.4.0 OR run `npm i -g http-server`."
  fi
}

#
# If a certain type parameter was passed to the script, try to run it.
#
if [ -n "$TYPE" ]; then
  case "$TYPE" in
    flow)
      run_flow_server ;;
    php)
      run_php_server ;;
    node)
      run_node_server ;;
    *)
      run_any_server ;;
  esac

#
# If no type parameter was passed, cycle through all options and run the first available server.
#
else
  run_any_server
fi

exit 0;
